name: PR Plan

on: [pull_request]

jobs:
  # check_format:
  #   runs-on: ubuntu-latest
  #   name: Check terraform file are formatted correctly
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: terraform fmt
  #       uses: dflook/terraform-fmt-check@v1
  #       with:
  #         path: /
  # validate:
  #   runs-on: ubuntu-latest
  #   name: Validate terraform
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: terraform validate
  #       uses: dflook/terraform-validate@v1
  #       with:
  #         path: /
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: /
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
        # with:
        #   var_file: testing.tfvars

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var-file=testing.tfvars
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
